//Координаты начинаются с 1 и заканчиваются 3
//По горизонтали Y, по вертикали X
#include <iostream>

void showField(char field[][3]){
  std::cout << "-------" << std::endl;
  for(int i = 0; i < 3; ++i){
    for(int j = 0; j < 3; ++j){
      std::cout << "|" << field[i][j];
    }
    std::cout << "|" << std::endl << "-------" << std::endl;
  }
}

bool winCheck(char field[][3]){
  for(int i = 0; i < 3; ++i){
    bool matchHorizont = false;
		bool matchVertical = false;
		for (int j = 0; j < 2; ++j)
		{
			if ((field[i][j] == field[i][j+1]) && (field[i][j] != ' ') && matchHorizont) 
				return true;
			else 
				if ((field[i][j] == field[i][j+1]) && (field[i][j] != ' '))
					matchHorizont = true;
			
			if ((field[j][i] == field[j+1][i]) && (field[j][i] != ' ') && matchVertical) 
				return true;
			else 
				if ((field[j][i] == field[j+1][i]) && (field[j][i] != ' '))
					matchVertical = true;
		}
  }
  return false;
}

bool turnPlayer(int player, char symb, char field[][3]){
  int x, y;
  showField(field);
  std::cout << "Ход игрока " << player << ": " <<std::endl;
  std::cout << "X = ";
  std::cin >> x;
  std::cout << "Y = ";
  std::cin >> y;
  if (x >= 1 && x <= 3 && y >= 1 && y <= 3){
    if(field[x-1][y-1] != ' '){
      std::cout << "Это место занято!" << std::endl;
      return false;
    }
    else{
      field[x-1][y-1] = symb;
      return true;
    }
  }
  else{
    std::cout << "Введены неверные координаты!" << std::endl;
    return false;
  }
}

int main() {
  // поле
  char field[3][3] = {{' ',' ',' '},
                      {' ',' ',' '},
                      {' ',' ',' '}};

  int player = 1; // игрок
  std::cout << "                 Координаты начинаются с 1 и заканчиваются 3 \n" <<
               "                 По горизонтали Y, по вертикали X \n";
  while(true){
    if(winCheck(field)){
      std::cout << "Победа!" << std::endl;
      showField(field);
      return 0;
    }
    if(player == 1){
      while(!turnPlayer(player, 'X', field));
      player = 2;
    }
    else{
      while(!turnPlayer(player, 'O', field));
      player = 1;
    }
  }

}



/*
Задача 2. Крестики-нолики

Старинная-добрая игра на страницах всех школьных тетрадей. Поле размером 3х3 представлено в виде двумерного массива с типом элементов char. Помните тот символьный тип из предыдущего модуля? Теперь он нам и пригодится. Участвуют два игрока, которые ходят по очереди и ставят в указанные ими в стандартном вводе координаты свой символ - ‘X’ или ‘O’ (буквы латинского алфавита). Как только у одного из игроков будет установлено подряд три крестика или три нолика - он побеждает. Если свободных клеток не осталось, а трёх совпадающих элементов не найдено - объявляется ничья. Для простоты, мы не будем рассматривать диагональные совпадения, а только строго вертикальные либо строго горизонтальные.

Изначально всё поле инициализируется символом пробела - ‘ ‘. Это можно сделать сразу при объявлении, либо с помощью вложенного цикла. На каждом ходе, при занятой клетке или при неверных координатах этой клетки должно быть выведено сообщение и игрок должен указать координаты клетки повторно. После каждого хода надо выводить в консоль текущее состояние всего игрового поля, для наглядности.

Сделаю ещё одну небольшую подсказку. Проверку на победу игрока, которую надо осуществлять после каждого хода, можно сделать с помощью вложенного цикла, сразу проверяя и вертикаль и горизонталь а как именно - попробуйте догадаться сами.
*/